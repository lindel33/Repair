# Generated by Django 4.0.1 on 2022-01-07 16:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu', models.CharField(max_length=100, verbose_name='Процессор')),
                ('cpu_core', models.SmallIntegerField(verbose_name='Кол-во ядер')),
                ('frequency', models.FloatField(max_length=60, verbose_name='Частота')),
                ('graphics_cpu', models.CharField(max_length=130, verbose_name='Графический процессор')),
                ('cpu_socket', models.CharField(max_length=20, verbose_name='Сокет')),
            ],
            options={
                'verbose_name': 'Процессор',
                'verbose_name_plural': 'Процессоры',
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название')),
                ('ssd', models.BooleanField(verbose_name='ssd')),
                ('hard_disk', models.BooleanField(verbose_name='HardDisk')),
                ('memory_ssd', models.SmallIntegerField(verbose_name='Объем ssd ГБ')),
                ('memory_hard', models.SmallIntegerField(verbose_name='Объем жесткого диска ГБ')),
            ],
            options={
                'verbose_name': 'Память',
                'verbose_name_plural': 'Память',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('number_slots_ram', models.SmallIntegerField(verbose_name='Кол-во слотов для ОЗУ')),
            ],
            options={
                'verbose_name': 'Материнская плата',
                'verbose_name_plural': 'Материнскае платы',
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ram', models.CharField(max_length=50, verbose_name='Производитель')),
                ('memory_ram', models.SmallIntegerField(verbose_name='Объем установленный ГБ')),
                ('type_socket', models.CharField(max_length=5, verbose_name='Тип DDR')),
                ('frequency', models.FloatField(max_length=60, verbose_name='Частота')),
            ],
            options={
                'verbose_name': 'ОЗУ',
                'verbose_name_plural': 'ОЗУ',
            },
        ),
        migrations.CreateModel(
            name='VideoCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('memory', models.SmallIntegerField(verbose_name='Память ГБ')),
            ],
            options={
                'verbose_name': 'ВидеоКарта',
                'verbose_name_plural': 'ВидеоКарты',
            },
        ),
        migrations.CreateModel(
            name='NoteBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_company', models.CharField(max_length=20, unique=True, verbose_name='Производитель')),
                ('image_1', models.ImageField(default='test.jpg', upload_to='media', verbose_name='Фото 1')),
                ('image_2', models.ImageField(default='test.jpg', upload_to='media', verbose_name='Фото 1')),
                ('series', models.CharField(max_length=255, unique=True, verbose_name='Серия/Номер модели')),
                ('diagonal', models.FloatField(max_length=60, verbose_name='Диагональ экрана')),
                ('size_screen', models.CharField(max_length=20, verbose_name='Разрешение экрана')),
                ('type_matrix', models.CharField(max_length=30, verbose_name='Тип матрицы экрана')),
                ('surface_screen', models.CharField(max_length=30, verbose_name='Поверхность экрана')),
                ('type_connect_cpu', models.BooleanField(verbose_name='Интегрированный?')),
                ('type_connect_ram', models.BooleanField(verbose_name='Есть интергрированный слот?')),
                ('type_connect_memory', models.BooleanField(verbose_name='Есть интергрированный слот?')),
                ('type_connect_video', models.BooleanField(verbose_name='Интергрированная?')),
                ('availability', models.BooleanField(default=False, verbose_name='Наличие')),
                ('usb_ports', models.SmallIntegerField(verbose_name='USB портов')),
                ('hdmi_port', models.BooleanField(verbose_name='HDMI')),
                ('lan', models.BooleanField(verbose_name='LAN порт')),
                ('bluetooth_5', models.BooleanField(verbose_name='Bluetooth 5')),
                ('bluetooth_4', models.BooleanField(verbose_name='Bluetooth 4')),
                ('headphone', models.CharField(max_length=255, verbose_name='Наушники')),
                ('price', models.FloatField()),
                ('key_cpu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair_home.cpu')),
                ('key_memory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair_home.memory')),
                ('key_motherboard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair_home.motherboard')),
                ('key_ram', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair_home.ram')),
                ('key_video_cart', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair_home.videocart')),
            ],
            options={
                'verbose_name': 'Ноутбук',
                'verbose_name_plural': 'Ноутбуки',
            },
        ),
    ]
